# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/linux/pkg_config.gni")
import("//build/config/features.gni")
import("//build/config/ui.gni")

group("linux") {
  visibility = [ "//:optimize_gn_gen" ]
}

# This is included by reference in the //build/config/compiler config that
# is applied to all targets. It is here to separate out the logic that is
# Linux-only. This is not applied to Android, but is applied to ChromeOS.
config("compiler") {
  cflags = [ "-pthread" ]
  ldflags = [ "-pthread" ]
}

# This is included by reference in the //build/config/compiler:runtime_library
# config that is applied to all targets. It is here to separate out the logic
# that is Linux-only. Please see that target for advice on what should go in
# :runtime_library vs. :compiler.
config("runtime_library") {
  # Set here because OS_CHROMEOS cannot be autodetected in build_config.h like
  # OS_LINUX and the like.
  if (is_chromeos) {
    defines = [ "OS_CHROMEOS" ]
  }
}

config("fontconfig") {
  visibility = [ "//build/linux:fontconfig" ]
  libs = [ "fontconfig" ]
}

config("x11") {
  libs = [
    "X11",
    "X11-xcb",
    "xcb",
    "Xcomposite",
    "Xcursor",
    "Xdamage",
    "Xext",
    "Xfixes",
    "Xi",
    "Xrender",
    "Xtst",
  ]
}

config("xcomposite") {
  libs = [ "Xcomposite" ]
}

config("xext") {
  libs = [ "Xext" ]
}

config("xrandr") {
  libs = [ "Xrandr" ]
}

config("xscrnsaver") {
  libs = [ "Xss" ]
}

config("xfixes") {
  libs = [ "Xfixes" ]
}

config("libcap") {
  libs = [ "cap" ]
}

config("xi") {
  libs = [ "Xi" ]
}

config("xtst") {
  libs = [ "Xtst" ]
}

config("libresolv") {
  libs = [ "resolv" ]
}

if (use_glib) {
  pkg_config("glib") {
    packages = [
      "glib-2.0",
      "gmodule-2.0",
      "gobject-2.0",
      "gthread-2.0",
    ]
  }
}

if (use_gstreamer) {
  has_valid_gst_version = exec_script(
    pkg_config_script,
    pkg_config_args + [ "--atleast-version=1.11.0", "gstreamer-1.0" ],
    "value")
  assert(has_valid_gst_version, "GStreamer 1.11.0 is required")

  pkg_config("gstreamer") {
    packages = [
      "gstreamer-1.0",
      "gstreamer-app-1.0",
      "gstreamer-audio-1.0",
      "gstreamer-base-1.0",
      "gstreamer-gl-1.0",
      "gstreamer-player-1.0",
      "gstreamer-video-1.0",
    ]
    defines = [ "GST_USE_UNSTABLE_API" ]
  }
}
